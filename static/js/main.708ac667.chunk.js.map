{"version":3,"sources":["utils.js","components/VideoRecorder/useRecorder.js","components/VideoRecorder/VideoRecorder.js","components/App.js","index.js"],"names":["getUserMedia","constraints","undefined","navigator","mediaDevices","webkitGetUserMedia","mozGetUserMedia","Promise","resolve","reject","call","Error","useRecorder","lengthMs","vdRef","useState","isRecording","setIsRecording","isRecordingFinished","setIsRecordingFinished","stream","setStream","recordedChunks","setRecordedChunks","recorder","useRef","useEffect","console","log","current","stop","a","setSrcPreview","record","captureStream","isActive","userMedia","vdEl","srcObject","mozCaptureStream","onplaying","capture","MediaRecorder","ondataavailable","data","chunks","start","state","delayMS","stopped","onstop","onerror","recorded","setTimeout","then","all","isFinished","VideoRecorder","maxRecordingMS","error","setError","videoEl","recordingEl","handleStart","err","message","handleStop","length","recordedBlob","Blob","type","src","URL","createObjectURL","className","ref","muted","autoPlay","style","display","controls","onClick","disabled","audio","video","width","height","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.708ac667.chunk.js","sourcesContent":["export function getUserMedia(constraints) {\n  // polyfill based on https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n  if (navigator.mediaDevices === undefined) {\n    navigator.mediaDevices = {};\n  }\n  \n  if (navigator.mediaDevices.getUserMedia === undefined) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      const getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n      if (!getUserMedia) {\n        return Promise.reject(new Error('getUserMedia is not implemented in this browser'));\n      }\n\n      return new Promise((resolve, reject) => {\n        getUserMedia.call(navigator, constraints, resolve, reject);\n      });\n    }\n  }\n\n  return navigator.mediaDevices.getUserMedia(constraints)\n}\n\nexport function wait(delayMS) {\n  return new Promise((resolve) => setTimeout(resolve, delayMS))\n}\n","import { useState, useRef, useEffect } from 'react'\nimport { wait, getUserMedia } from '../../utils'\n\nfunction useRecorder(constraints, lengthMs, vdRef) {\n  const [isRecording, setIsRecording] = useState(false)\n  const [isRecordingFinished, setIsRecordingFinished] = useState(true)\n  const [stream, setStream] = useState()\n  const [recordedChunks, setRecordedChunks] = useState([])\n  const recorder = useRef()\n\n  useEffect(() => {\n    if(isRecordingFinished) {\n      console.log('stopped recording')\n      recorder.current?.stop()\n    } else {\n      console.log('started recording')\n      ;(async () => {\n        if(!stream) return\n\n        await setSrcPreview(stream, vdRef.current)\n        record(vdRef.current.captureStream())\n      })()\n    }\n  }, [isRecordingFinished, stream, vdRef])\n\n  useEffect(() => {\n    let isActive = true\n    if(isRecording) {\n      (async () => {\n        const userMedia = await getUserMedia(constraints)\n        if(isActive) {\n          setStream(userMedia)\n        }\n      })()\n    }\n    \n    return () => { isActive = false }\n  }, [constraints, isRecording])\n\n  const start = async () => {\n    setIsRecording(true)\n    setIsRecordingFinished(false)\n  }\n  \n  const stop = async () => {\n    setIsRecording(false)\n    setIsRecordingFinished(true)\n  }\n  \n  const setSrcPreview = (stream, vdEl) => {\n    vdEl.srcObject = stream\n    vdEl.captureStream = vdEl.captureStream || vdEl.mozCaptureStream\n    return new Promise((resolve) => vdEl.onplaying = resolve)\n  }\n\n  const record = (capture) => {\n    recorder.current = new MediaRecorder(capture)\n    setRecordedChunks([])\n\n    recorder.current.ondataavailable = ({data}) => {\n      setRecordedChunks((chunks) => [...chunks, data])\n    }\n    recorder.current.start()\n    console.log(recorder.current.state)\n\n    const stopped = new Promise((resolve, reject) => {\n      recorder.current.onstop = resolve\n      recorder.current.onerror = reject\n    })\n\n    const recorded = wait(lengthMs)\n      .then(() => {\n        if(isRecording) {\n          setIsRecordingFinished(true)\n          setIsRecording(false)\n        }\n      })\n    \n      \n    return Promise.all([stopped, recorded])\n  }\n\n  return { start, stop, chunks: recordedChunks, isFinished: isRecordingFinished, isRecording }\n}\n\nexport { useRecorder }\n","import { useState, useRef, useEffect } from 'react'\nimport { useRecorder } from './useRecorder'\n\nfunction VideoRecorder({ constraints, maxRecordingMS = 5000 }) {\n  const [error, setError] = useState('')\n  const videoEl = useRef()\n  const recordingEl = useRef()\n  const recorder = useRecorder(constraints, maxRecordingMS, videoEl)\n  \n  const handleStart = async () => {\n    try {\n      recorder.start()\n    } catch(err) {\n      console.error(err)\n      setError(err.message || err)\n    }\n  }\n\n  const handleStop = async () => {\n    recorder.stop()\n  }\n\n  useEffect(() => {\n    if(recorder.isFinished && recorder.chunks.length !== 0) {\n      const recordedBlob = new Blob(recorder.chunks, { type: 'video/webm' })\n      recordingEl.current.src = URL.createObjectURL(recordedBlob)\n    }\n  }, [recorder.isFinished, recorder.chunks])\n\n  return (\n    <main>\n      {error && <div className=\"error\">{error}</div>}\n      <video ref={videoEl} muted autoPlay style={{ display: !recorder.isFinished || recorder.chunks.length === 0 ? 'block' : 'none'}}></video>\n      <video ref={recordingEl} controls style={{ display: recorder.isFinished && recorder.chunks.length !== 0 ? 'block' : 'none'}}></video>\n      <div className=\"buttons\">\n        <button onClick={handleStart}>Start</button>\n        <button onClick={handleStop} disabled={!recorder.isRecording && recorder.isFinished}>Stop</button>\n      </div>\n    </main>\n  )\n}\n\nexport default VideoRecorder\n","import '../styles/styles.css'\nimport { VideoRecorder } from './VideoRecorder'\n\nconst constraints = { audio: true, video: true, width: 640, height: 480 }\n\nfunction App() {\n  return (\n    <div>\n      <h1>Record Your Video!</h1>\n      <VideoRecorder maxRecordingMS={7000} constraints={constraints} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}